name: Deploy Infra - Dev

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1

    steps:
      - name: 📥 Checkout del repo
        uses: actions/checkout@v3

      - name: ⚙️ Setup Node.js (para Lambda y Layer)
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: 📦 Crear zip Lambda
        run: |
          cd lambda
          npm ci
          zip -r ../artifacts/dev/lambda_function.zip index.js node_modules

      - name: 📦 Crear zip Layer
        run: |
          mkdir -p layers/nodejs
          cd layers
          npm ci --prefix nodejs
          cd ..
          zip -r artifacts/dev/aws_sdk_layer.zip layers/nodejs

      - name: ☁️ Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      - name: 🌱 Terraform Init
        run: terraform init
        working-directory: infra/environments/dev
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: ✅ Terraform Validate
        run: terraform validate
        working-directory: infra/environments/dev

      - name: 🧪 Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: infra/environments/dev
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: 🚀 Terraform Apply (solo si es push a main)
        if: github.event_name == 'push'
        run: terraform apply -auto-approve tfplan
        working-directory: infra/environments/dev
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
